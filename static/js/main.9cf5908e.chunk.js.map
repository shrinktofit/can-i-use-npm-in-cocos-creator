{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["database","Packages","match","useRouteMatch","path","PackageInfo","Object","keys","packages","map","packageName","to","packageId","useParams","App","className","Helmet","promiseFn","fetchDatabase","data","isLoading","console","log","React","Component","a","fetch","response","json","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAeIA,EAAsC,KA+B1C,SAASC,IACL,IAAIC,EAAQC,cACZ,OAAO,cAAC,IAAD,UACH,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAI,UAAKF,EAAME,KAAX,wBAAX,SACI,cAACC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAMF,EAAME,KAAnB,SACI,8BACI,6BACIE,OAAOC,KAAKP,EAAUQ,UAAUC,KAAI,SAACC,GAAD,OAAiB,6BACjD,cAAC,IAAD,CAAMC,GAAE,oBAAeD,GAAvB,SACKA,sBAWrC,SAASL,IACL,IAAQO,EAAcC,cAAdD,UACR,OAAO,8BACFA,IAIME,M,4JA3DX,WACI,OAAO,sBAAKC,UAAU,MAAf,UACH,cAACC,EAAA,EAAD,UACI,iEAGJ,cAAC,IAAD,CAAOC,UAAWC,EAAlB,SACK,YAA0B,IAAvBC,EAAsB,EAAtBA,KAAsB,EAAhBC,UACN,GAAKD,EAKL,OAFAE,QAAQC,IAAIH,GACZnB,EAAWmB,EACH,cAAC,IAAD,UACJ,8BACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOf,KAAK,IAAZ,SACI,cAACH,EAAD,sB,GAlBlBsB,IAAMC,W,SA8DTN,I,2EAAf,8BAAAO,EAAA,sEAC2BC,MAAM,uBADjC,cACUC,EADV,gBAEuBA,EAASC,OAFhC,cAEUA,EAFV,yBAGWA,GAHX,4C,sBC7EA,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9cf5908e.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { CanIUseNpmDatabase, Package } from './Database';\nimport Async from 'react-async';\nimport { Helmet } from 'react-helmet';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n    useRouteMatch\n} from \"react-router-dom\";\n\nlet database: CanIUseNpmDatabase | null = null;\n\nclass App extends React.Component {\n    render() {\n        return <div className=\"App\">\n            <Helmet>\n                <title>Can I use ... npm module..</title>\n            </Helmet>\n\n            <Async promiseFn={fetchDatabase}>\n                {({ data, isLoading }) => {\n                    if (!data) {\n                        return;\n                    }\n                    console.log(data);\n                    database = data;\n                    return (<Router>\n                        <div>\n                            <Switch>\n                                <Route path=\"/\">\n                                    <Packages></Packages>\n                                </Route>\n                            </Switch>\n                        </div>\n                    </Router>);\n                }}\n            </Async>\n        </div>;\n    }\n}\n\nfunction Packages() {\n    let match = useRouteMatch();\n    return <Router>\n        <div>\n            <Switch>\n                <Route path={`${match.path}/packages/:packageId`}>\n                    <PackageInfo />\n                </Route>\n                <Route path={match.path}>\n                    <nav>\n                        <ul>{\n                            Object.keys(database!.packages).map((packageName) => <li>\n                                <Link to={`/packages/${packageName}`}>\n                                    {packageName}\n                                </Link>\n                            </li>)\n                        }</ul>\n                    </nav>\n                </Route>\n            </Switch>\n        </div>\n    </Router>\n}\n\nfunction PackageInfo() {\n    const { packageId } = useParams<{ packageId: string }>();\n    return <div>\n        {packageId}\n    </div>\n}\n\nexport default App;\n\nasync function fetchDatabase() {\n    const response = await fetch('database/index.json');\n    const json = await response.json();\n    return json as CanIUseNpmDatabase;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}