{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["comparePackageUsage","a","b","weight","usage","module","getModuleId","packageId","subpath","ShowEsmPackageUsage","packageInfo","Array","isArray","export","map","exportInfo","importSpecifier","type","local","bindings","exports","binding","exported","join","printImportSpecifier","path","showTypesOverride","ShowCommonJsPackageUsage","ShowTypes","types","definitelyTyped","href","subPathTypes","moduleId","App","props","state","database","fetchDatabase","setState","this","className","Helmet","component","match","useRouteMatch","useParams","packages","usages","slice","sort","length","ShowPackageInfo","Object","keys","packageName","to","Packages","React","Component","fetch","process","response","json","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff6257ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport './List.css';\r\nimport { CanIUseNpmDatabase, CommonJsUsage, EsmUsage, ImportSpecifier, PackageInfo, PackageUsage } from './Database';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component<{}, {\r\n    database: CanIUseNpmDatabase;\r\n}> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            database: null!,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        (async () => {\r\n            const database = await fetchDatabase();\r\n            this.setState({ database, });\r\n        })();\r\n    }\r\n\r\n    render() {\r\n        const { database } = this.state;\r\n        return database && <div className=\"App\">\r\n            <Helmet>\r\n                <title>Can I use ... npm module..</title>\r\n            </Helmet>\r\n\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <Route path=\"/\" component={() => Packages(database)}>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>;\r\n    }\r\n}\r\n\r\nfunction Packages(database: CanIUseNpmDatabase) {\r\n    let match = useRouteMatch();\r\n    if (!database) {\r\n        return <div></div>;\r\n    }\r\n    return <Router>\r\n        <div>\r\n            <h1> 我能否在 Cocos Creator 中使用 npm 包…… </h1>\r\n            <Switch>\r\n                <Route path={`${match.path}packages/:packageId`} component={() => ShowPackageInfo(database)}>\r\n                </Route>\r\n                <Route path={match.path}>\r\n                    <nav>\r\n                        <ul>{\r\n                            Object.keys(database!.packages).map((packageName) => <li key={packageName}>\r\n                                <Link to={`${match.path}packages/${packageName}`}>\r\n                                    {packageName}\r\n                                </Link>\r\n                            </li>)\r\n                        }</ul>\r\n                    </nav>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    </Router>\r\n}\r\n\r\nfunction comparePackageUsage (a: PackageUsage, b: PackageUsage) {\r\n    const weight = (usage: PackageUsage) => usage.module === 'module' ? 0 : 1;\r\n    return weight(a) - weight(b);\r\n}\r\n\r\nfunction ShowPackageInfo(database: CanIUseNpmDatabase) {\r\n    const { packageId } = useParams<{ packageId: string }>();\r\n    const packageInfo = database.packages[packageId];\r\n    if (!packageInfo) {\r\n        return <div>我们暂未收录此包的用法。</div>\r\n    }\r\n    const usages = Array.isArray(packageInfo.usage) ? packageInfo.usage : [packageInfo.usage];\r\n    usages.slice().sort(comparePackageUsage);\r\n    return (<div>\r\n        <a href={`https://www.npmjs.com/package/${packageId}`}>{`npmjs.com/package/${packageId}`}</a>\r\n        <ul>\r\n            <li> 可用：{usages.length > 0 ? '✔️' : '❌'}</li>\r\n            <li> 安装：npm install --save {packageId}</li>\r\n            <li> {ShowTypes(packageId, packageInfo)}</li>\r\n            {\r\n                usages.map((usage) => <li> {\r\n                    usage.module === 'module'\r\n                        ? ShowEsmPackageUsage(packageId, packageInfo, usage)\r\n                        : ShowCommonJsPackageUsage(packageId, packageInfo, usage)\r\n                } </li>)\r\n            }\r\n        </ul>\r\n    </div>)\r\n}\r\n\r\nfunction getModuleId (packageId: string, subpath: string) {\r\n    return subpath === '.' ? packageId : `${packageId}/${subpath}`;\r\n}\r\n\r\nfunction printImportSpecifier(importSpecifier: ImportSpecifier) {\r\n    switch (importSpecifier.type) {\r\n        case 'default': return `${importSpecifier.local}`;\r\n        case 'namespace': return `* as ${importSpecifier.local}`\r\n        case 'named': {\r\n            const bindings = Array.isArray(importSpecifier.exports) ? importSpecifier.exports : [importSpecifier.exports];\r\n            return `{ ${bindings.map((binding) => typeof binding === 'string'\r\n                ? binding :\r\n                `${binding.exported} as ${binding.local}`).join(', ')} }`;\r\n        }\r\n    }\r\n}\r\n\r\nfunction ShowEsmPackageUsage(packageId: string, packageInfo: PackageInfo, usage: EsmUsage) {\r\n    return (<div>\r\n        用法：ESM 模块\r\n        <div>\r\n        {<pre>\r\n            {(Array.isArray(usage.export) ? usage.export : [usage.export]).map((exportInfo) => {\r\n                return `import ${printImportSpecifier(exportInfo)} from \"${getModuleId(packageId, usage.path)}\";`;\r\n            }).join(`\\n或\\n`)}\r\n        </pre>}\r\n        {showTypesOverride(packageId, packageInfo, usage)}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nfunction ShowCommonJsPackageUsage(packageId: string, packageInfo: PackageInfo, usage: CommonJsUsage) {\r\n    return (<div>\r\n        用法：CommonJS 模块\r\n        <div>\r\n        {<pre>\r\n            {`import ${usage.local} from \"${getModuleId(packageId, usage.path)}\";`}\r\n        </pre>}\r\n        {showTypesOverride(packageId, packageInfo, usage)}\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nfunction ShowTypes(packageId: string, packageInfo: PackageInfo) {\r\n    const { types } = packageInfo;\r\n    if (!types) {\r\n        return;\r\n    }\r\n    const { definitelyTyped } = types;\r\n    return (<div>\r\n        {(() => {\r\n            if (definitelyTyped) {\r\n                return <div>\r\n                    此包的类型定义存放在 <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped\">DefinitelyTyped</a> 上。\r\n                    <br/>\r\n                    通过以下方式安装：\r\n                    <pre>\r\n                        npm install --save-dev @types/{packageId}\r\n                    </pre>\r\n                </div>;\r\n            } else {\r\n                return <div>\r\n                    此包本身提供了类型定义。\r\n                </div>;\r\n            }\r\n        })()}\r\n        \r\n    </div>);\r\n}\r\n\r\nfunction showTypesOverride(packageId: string, packageInfo: PackageInfo, usage: EsmUsage | CommonJsUsage) {\r\n    const { types } = packageInfo;\r\n    if (!types) {\r\n        return;\r\n    }\r\n    const { subPathTypes } = types;\r\n    return (<div>\r\n        {(() => {\r\n            if (usage.path === '.' || subPathTypes) {\r\n                return;\r\n            }\r\n            const moduleId = getModuleId(packageId, usage.path);\r\n            return (<div>\r\n                模块“{moduleId}”可能没有相应的类型声明。\r\n                <br/>\r\n                为了获取类型提示，将以下内容拷贝至任何 `.d.ts` 文件中，并在 tsconfig.json 中引用该 `.d.ts` 文件。\r\n                <pre>\r\n                declare module \"{moduleId}\" {`{\r\n                    export *${usage.module === 'module' ? '' : ' as default'} from '${packageId}';\r\n                }`}\r\n                </pre>\r\n            </div>)\r\n        })()}\r\n    </div>);\r\n}\r\n\r\nexport default App;\r\n\r\nasync function fetchDatabase() {\r\n    const response = await fetch(`${process.env.PUBLIC_URL}/database/index.json`);\r\n    const json = await response.json();\r\n    return json as CanIUseNpmDatabase;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}